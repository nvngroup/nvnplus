services:
  backend:
    container_name: backend
    image: brunocgc/nvnplus-backend:latest
    env_file:
      - .env-backend-acme
    restart: always
    networks:
      - nvnplus-network
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 8G
        reservations:
          memory: 512M

  frontend:
    container_name: frontend
    image: brunocgc/nvnplus-frontend:latest
    env_file:
      - .env-frontend-acme
    restart: always
    networks:
      - nvnplus-network
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  timescaledb:
    container_name: timescaledb
    image: timescale/timescaledb-ha:pg16
    command: ["postgres", "-c", "max_connections=5000"]
    restart: always
    env_file:
      - .env-postgre-acme
    volumes:
      - timescaledb_data:/home/postgres/pgdata/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "${DB_PORT:-5432}:5432"
    networks:
      - nvnplus-network

  redis:
    container_name: redis
    image: redis:latest
    command: redis-server --appendonly yes
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - nvnplus-network

  minio:
    container_name: minio
    image: minio/minio:latest
    networks:
      - nvnplus-network
    command: server /data --console-address ":9001"
    restart: always
    ports:
      - 9000:9000
      - 9001:9001
    env_file:
      - .env-minio-acme
    volumes:
      - minio_data:/data

  evolution:
    container_name: evolution
    image: evoapicloud/evolution-api:homolog
    restart: always
    depends_on:
      - timescaledb
      - minio
      - redis
    networks:
      - nvnplus-network
    ports:
      - 8080:8080
    env_file:
      - .env.evolution-acme
    volumes:
      - evolution_data:/evolution/instances

  nginx:
    image: nginx:1.25-alpine
    container_name: nginx
    ports:
      - "${NGINX_PORT:-80}:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    restart: always
    networks:
      - nvnplus-network

networks:
  nvnplus-network:
    driver: bridge

volumes:
  timescaledb_data:
    driver: local
  redis_data:
    driver: local
  minio_data:
    driver: local
  evolution_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
